#!/bin/sh

export KSROOT=/koolshare
source $KSROOT/scripts/base.sh
eval $(dbus export usb2jffs_)
alias echo_date='echo 【$(TZ=UTC-8 date -R +%Y年%m月%d日\ %X)】'
LOG_FILE=/tmp/upload/usb2jffs_log.txt

ACTION=$1
MTPATH=$2

stop_software_center(){
	killall skipd >/dev/null 2>&1
	/koolshare/perp/perp.sh stop >/dev/null 2>&1
}

start_software_center(){
	killall skipd >/dev/null 2>&1
	/koolshare/perp/perp.sh stop >/dev/null 2>&1
	sleep 1
	service start_skipd >/dev/null 2>&1
	/koolshare/perp/perp.sh start >/dev/null 2>&1
}

get_current_jffs_device(){
	# 查看当前/jffs是什么设备挂载的
	local cur_patition=$(df -h | grep /jffs |awk '{print $1}')
	if [ -n "$cur_patition" ];then
		jffs_device=$cur_patition
		return 0
	else
		jffs_device=""
		return 1
	fi
}

get_current_usb_device(){
	# 查看USB磁盘是什么设备挂载的
	local cur_patition=$(df -h | grep $MTPATH |awk '{print $1}')
	if [ -n "$cur_patition" ];then
		usb_device=$cur_patition
		return 0
	else
		usb_device=""
		return 1
	fi
}

get_jffs_original_mount_device(){
	# 查看原始JFFS分区是用FLASH里的哪个分区挂载的
	local mtd_jffs=$(df -h | grep /cifs2 |awk '{print $1}')
	if [ -n "$mtd_jffs" ];then
		mtd_disk="$mtd_jffs"
		return 0
	else
		# incase of cifs2 not mounted
		local model=$(nvram get model)
		case $model in
			RT-AC86U|GT-AC5300)
				mtd_disk="/dev/mtdblock8"
				return 0
				;;
			RT-AX88U|GT-AX11000)
				mtd_disk="/dev/mtdblock9"
				return 0
				;;
			*)
				mtd_disk=""
				return 1
				;;
		esac
	fi
}

JFFS2USB(){
	# 检测是否已经有USB设备挂载了jffs，如果JFFS的挂载设备有多个，说明已经挂在
	# 防止用户在路由器开机状态，并且已经替换了JFFS为USB的情况下，再插入一个有.koolshare_jffs目录的USB储存设备导致重复挂载
	get_current_jffs_device
	local mounted_nu=$(mount | grep "${jffs_device}" | grep -c "/dev/s")
	if [ "$mounted_nu" -gt "1" ]; then
		echo_date "USB2JFFS：检测到你的USB磁盘${jffs_device}已经挂载在/jffs上了"
		return 1
	fi
	
	# 判断插入USB磁盘设备的格式
	local format=$(mount | grep "${MTPATH}" | awk '{print $5}')
	if [ "${format}" == "ext2" -o "${format}" == "ext3" -o "${format}" == "ext4" ];then
		echo_date "USB2JFFS：USB磁盘${MTPATH}格式为${format}，符合USB2JFFS要求！"
	else
		# echo_date "USB2JFFS：USB磁盘${MTPATH}格式为${format}，不符合USB2JFFS要求！"
		return 1
	fi
	
	# 寻找是否已经安装有软件中心
	if [ -d "${MTPATH}/.koolshare_jffs" ]; then
		echo_date "USB2JFFS：USB磁盘${MTPATH}内找到jffs目录：.koolshare_jffs"
	else
		# U盘里没有软件中心
		echo_date "USB2JFFS：USB磁盘${MTPATH}内没有找到jffs目录：.koolshare_jffs，不进行任何操作，跳过！"
		return 1
	fi

	# 获取jffs原始设备
	get_jffs_original_mount_device
	if [ -z "$mtd_disk" ]; then
		echo_date "无法找到原始/jffs挂载设备！请重启后重试！"
		return 1
	fi

	# 检测是否有不挂载的标记文件
	if [ -f ${MTPATH}/.koolshare_jffs/.usb2jffs_flag ]; then
		echo_date "USB2JFFS：因为你上次手动卸载了USB jffs的挂载，本次开机启动不进行挂载操作！"
		echo_date "USB2JFFS：如需继续挂载，请使用USB2JFFS插件重新手动挂载！"
		return 1
	fi

	# 检测用户是否重置了路由器，如果是，则用重置后的nvram替换
	if [ -z "$(nvram get usb2jffs_flag)" -o "$(nvram get usb2jffs_flag)" != "1" ]; then
		rm -f ${MTPATH}/.koolshare_jffs/nvram/*
		cp -af /jffs/nvram/* ${MTPATH}/.koolshare_jffs/nvram/
	fi

	# 检测并重写挂载点，因为重启路由等操作可能导致设备挂载路点字改变，比如 /tmp/mnt/sda1 → /tmp/mnt/sdb1
	if [ "${usb2jffs_mount_path}" != "$MTPATH" ]; then
		echo_date "USB2JFFS：检测到挂载点发生改变：${usb2jffs_mount_path} → $MTPATH，更新挂载点记录！"
		dbus set usb2jffs_mount_path=$MTPATH
	fi
	
	# 关闭skipd和httpdb进程
	# 1. 因为rc service运行了skipd，而skipd的数据库位于/jffs/db
	# 2. 因为.asusrouter已经运行了/jffs里的httpdb
	echo_date "USB2JFFS：停止软件中心相关进程！"
	stop_software_center

	# --------------------
	
	echo_date "USB2JFFS：卸载/jffs！"
	umount -l /jffs
	if [ "$?" == "0" ]; then
		echo_date "USB2JFFS：/jffs卸载成功！"
	else
		echo_date "USB2JFFS：/jffs卸载失败！"
		start_software_center
		return 1
	fi
	
	echo_date "USB2JFFS：挂载USB磁盘目录：${MTPATH}/.koolshare_jffs → /jffs"
	mount -o rbind ${MTPATH}/.koolshare_jffs /jffs
	if [ "$?" == "0" ]; then
		echo_date "USB2JFFS：挂载成功，挂载方式：${MTPATH}/.koolshare_jffs → /jffs"
		echo_date "USB2JFFS：软件中心相关进程：重启动！"
		start_software_center
		
		echo_date "USB2JFFS：启动完毕，一点点扫尾工作..."

		# 在系统nvram中写入一个值，如果检测不到该值，则说明用户重置了路由器，如果此时又安装了本插件再次手动挂载
		# 则需要删除${MTPATH}/.koolshare_jffs/nvram文件夹下相关内容，避免重置路由无用
		# 虽然在插件里配置USB替换JFFS时候已经写入了，但是为了保险还是写入一次
		nvram set usb2jffs_flag=1
		nvram commit

		# 把原来的jffs分区挂载到cifs
		mount -t jffs2 -o rw,noatime /dev/mtdblock9 /cifs2
	
		# 因为service-start启动太早，所以要在这里再启动一次
		# /koolshare/bin/ks-services-start.sh start
		start-stop-daemon -S -q -b -x /koolshare/bin/ks-services-start.sh start
		echo_date "USB2JFFS：完成！"
	fi
}

JFFS2USB | tee -a $LOG_FILE